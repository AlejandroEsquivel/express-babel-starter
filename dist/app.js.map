{"version":3,"sources":["../src/app.js"],"names":["app","disable","set","process","env","PORT","get","use","json","urlencoded","extended","req","res","next","err","Error","status","locals","message","error","render","server","createServer","port","listen","console","log","util","getEnv","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AAPA;;;AASAA,IAAIC,OAAJ,CAAY,cAAZ;AACAD,IAAIE,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,GAAP,CAAW,UAAX,CAApC;;AAGA;AACA;AACAN,IAAIO,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAP,IAAIO,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAR,IAAIO,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAV,IAAIO,GAAJ,CAAQ,6BAAR;AACA;;AAEA;AACAP,IAAIO,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAd,IAAIO,GAAJ,CAAQ,UAASO,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIX,GAAJ,CAAQM,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCQ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA,IAAMC,SAAS,eAAKC,YAAL,CAAkBtB,GAAlB,CAAf;AACA,IAAMuB,OAAOvB,IAAIM,GAAJ,CAAQ,MAAR,CAAb;AACAe,OAAOG,MAAP,CAAcD,IAAd,EAAoB,YAAY;AAC/BE,UAAQC,GAAR,uBAAgC,iBAAOpB,GAAP,CAAW,aAAX,CAAhC;AACAmB,UAAQC,GAAR,qBAA8B,iBAAOC,IAAP,CAAYC,MAAZ,CAAmB,UAAnB,CAA9B;AACA,CAHD;;AAKAC,OAAOC,OAAP,GAAiB9B,GAAjB","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\n// import favicon from 'serve-favicon';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport http from 'http';\nimport config from 'config';\n\nconst app = express();\n\napp.disable('x-powered-by');\napp.set('port', process.env.PORT || config.get('app.port'));\n\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n// app.use(express.static(path.join(__dirname, 'public')));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nconst server = http.createServer(app);\nconst port = app.get('port');\nserver.listen(port, function () {\n\tconsole.log(`App listening on ${config.get('app.baseUrl')}`);\n\tconsole.log(`Environment => ${config.util.getEnv('NODE_ENV')}`);\n});\n\nmodule.exports = app;\n"]}